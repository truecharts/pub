# Include{groups}
portals: {}
questions:
  - variable: portal
    group: "Container Image"
    label: "Configure Portal Button"
    schema:
      type: dict
      hidden: true
      attrs:
        - variable: enabled
          label: "Enable"
          description: "enable the portal button"
          schema:
            hidden: true
            editable: false
            type: boolean
            default: false
# Include{global}

  - variable: controller
    group: "Controller"
    label: ""
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: advanced
          label: "Show Advanced Controller Settings"
          schema:
            type: boolean
            default: false
            show_subquestions_if: true
            subquestions:
              - variable: type
                description: "Please specify type of workload to deploy"
                label: "(Advanced) Controller Type"
                schema:
                  type: string
                  default: "deployment"
                  required: true
                  enum:
                    - value: "deployment"
                      description: "Deployment"
                    - value: "statefulset"
                      description: "Statefulset"
                    - value: "daemonset"
                      description: "Daemonset"
              - variable: replicas
                description: "Number of desired pod replicas"
                label: "Desired Replicas"
                schema:
                  type: int
                  default: 1
                  required: true
              - variable: strategy
                description: "Please specify type of workload to deploy"
                label: "(Advanced) Update Strategy"
                schema:
                  type: string
                  default: "Recreate"
                  required: true
                  enum:
                    - value: "Recreate"
                      description: "Recreate: Kill existing pods before creating new ones"
                    - value: "RollingUpdate"
                      description: "RollingUpdate: Create new pods and then kill old ones"
                    - value: "OnDelete"
                      description: "(Legacy) OnDelete: ignore .spec.template changes"
# Include{controllerExpert}

  - variable: env
    group: "Container Configuration"
    label: "Image Environment"
    schema:
      additional_attrs: true
      type: dict
      attrs:

        - variable: ENABLE_AUTH
          label: 'ENABLE_AUTH'
          description: "Enable authentication"
          schema:
            type: string
            default: "1"
        - variable: XMPP_DOMAIN
          label: 'XMPP_DOMAIN'
          description: "Internal XMPP domain"
          schema:
            type: string
            default: "meet.jitsi"
        - variable: XMPP_AUTH_DOMAIN
          label: 'XMPP_AUTH_DOMAIN'
          description: "Internal XMPP domain for authenticated services"
          schema:
            type: string
            default: "auth.meet.jitsi"
        - variable: XMPP_INTERNAL_MUC_DOMAIN
          label: 'XMPP_INTERNAL_MUC_DOMAIN'
          description: "XMPP domain for the internal MUC"
          schema:
            type: string
            default: "internal-muc.meet.jitsi"
        - variable: XMPP_SERVER
          label: 'XMPP_SERVER'
          description: "Internal XMPP server name xmpp.meet.jitsi"
          schema:
            type: string
            default: "xmpp.meet.jitsi"
        - variable: JICOFO_COMPONENT_SECRET
          label: 'JICOFO_COMPONENT_SECRET'
          description: "XMPP component password for Jicofo"
          schema:
            type: string
            default: "s3cr37"
        - variable: JICOFO_AUTH_USER
          label: 'JICOFO_AUTH_USER'
          description: "XMPP user for Jicofo client connections"
          schema:
            type: string
            default: "focus"
        - variable: JICOFO_AUTH_PASSWORD
          label: 'JICOFO_AUTH_PASSWORD'
          description: "XMPP password for Jicofo client connections"
          schema:
            type: string
            default: "passw0rd"
        - variable: JICOFO_RESERVATION_REST_BASE_URL
          label: 'JICOFO_RESERVATION_REST_BASE_URL'
          description: "Base URL of Jicofo’s reservation REST API"
          schema:
            type: string
            default: "http://reservation.example.com"
        - variable: JVB_BREWERY_MUC
          label: 'JVB_BREWERY_MUC'
          description: "MUC name for the JVB pool"
          schema:
            type: string
            default: "jvbbrewery"
        - variable: JIGASI_BREWERY_MUC
          label: 'JIGASI_BREWERY_MUC'
          description: "MUC name for the Jigasi pool"
          schema:
            type: string
            default: "jigasibrewery"
        - variable: JIGASI_SIP_URI
          label: 'JIGASI_SIP_URI'
          description: "SIP URI for incoming  outgoing calls"
          schema:
            type: string
            default: "test@sip2sip.info"
        - variable: JIBRI_BREWERY_MUC
          label: 'JIBRI_BREWERY_MUC'
          description: "MUC name for the Jibri pool"
          schema:
            type: string
            default: "jibribrewery"
        - variable: JIBRI_PENDING_TIMEOUT
          label: 'JIBRI_PENDING_TIMEOUT'
          description: "MUC connection timeout"
          schema:
            type: string
            default: "90"


  - variable: serviceexpert
    group: "Networking and Services"
    label: "Show Expert Config"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: hostNetwork
          group: "Networking and Services"
          label: "Host-Networking (Complicated)"
          schema:
            type: boolean
            default: false

# Include{serviceExpert}

# Include{serviceList}

  - variable: persistence
    label: "Integrated Persistent Storage"
    description: "Integrated Persistent Storage"
    group: "Storage and Persistence"
    schema:
      additional_attrs: true
      type: dict
      attrs:

        - variable: config
          label: "config Storage"
          description: "IMPORTENT Change to mntuserappdatajitsijicofo"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceAdvanced}


# Include{persistenceList}


# Include{ingressList}

# Include{security}

  - variable: advancedSecurity
    label: "Show Advanced Security Settings"
    group: "Security and Permissions"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: securityContext
          label: "Security Context"
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: privileged
                label: "Privileged mode"
                schema:
                  type: boolean
                  default: false
              - variable: readOnlyRootFilesystem
                label: "ReadOnly Root Filesystem"
                schema:
                  type: boolean
                  default: false
              - variable: allowPrivilegeEscalation
                label: "Allow Privilege Escalation"
                schema:
                  type: boolean
                  default: false
              - variable: runAsNonRoot
                label: "runAsNonRoot"
                schema:
                  type: boolean
                  default: false
# Include{securityContextAdvanced}

  - variable: podSecurityContext
    group: "Security and Permissions"
    label: "Pod Security Context"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: runAsUser
          label: "runAsUser"
          description: "The UserID of the user running the application"
          schema:
            type: int
            default: 0
        - variable: runAsGroup
          label: "runAsGroup"
          description: The groupID this App of the user running the application"
          schema:
            type: int
            default: 0
        - variable: fsGroup
          label: "fsGroup"
          description: "The group that should own ALL storage."
          schema:
            type: int
            default: 568
# Include{podSecurityContextAdvanced}


# Include{resources}

# Include{advanced}

# Include{addons}
