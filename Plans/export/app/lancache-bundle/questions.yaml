# Include{groups}
portals:
  open:
    protocols:
      - "$kubernetes-resource_configmap_portal_protocol"
    host:
      - "$kubernetes-resource_configmap_portal_host"
    ports:
      - "$kubernetes-resource_configmap_portal_port"
questions:
  - variable: portal
    group: "Container Image"
    label: "Configure Portal Button"
    schema:
      type: dict
      hidden: true
      attrs:
        - variable: enabled
          label: "Enable"
          description: "enable the portal button"
          schema:
            hidden: true
            editable: false
            type: boolean
            default: true
# Include{global}

  - variable: controller
    group: "Controller"
    label: ""
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: advanced
          label: "Show Advanced Controller Settings"
          schema:
            type: boolean
            default: false
            show_subquestions_if: true
            subquestions:
              - variable: type
                description: "Please specify type of workload to deploy"
                label: "(Advanced) Controller Type"
                schema:
                  type: string
                  default: "deployment"
                  required: true
                  enum:
                    - value: "deployment"
                      description: "Deployment"
                    - value: "statefulset"
                      description: "Statefulset"
                    - value: "daemonset"
                      description: "Daemonset"
              - variable: replicas
                description: "Number of desired pod replicas"
                label: "Desired Replicas"
                schema:
                  type: int
                  default: 1
                  required: true
              - variable: strategy
                description: "Please specify type of workload to deploy"
                label: "(Advanced) Update Strategy"
                schema:
                  type: string
                  default: "Recreate"
                  required: true
                  enum:
                    - value: "Recreate"
                      description: "Recreate: Kill existing pods before creating new ones"
                    - value: "RollingUpdate"
                      description: "RollingUpdate: Create new pods and then kill old ones"
                    - value: "OnDelete"
                      description: "(Legacy) OnDelete: ignore .spec.template changes"
# Include{controllerExpert}

  - variable: env
    group: "Container Configuration"
    label: "Image Environment"
    schema:
      additional_attrs: true
      type: dict
      attrs:

        - variable: LANCACHE_IP
          label: 'LANCACHE_IP'
          description: "IP Address of cache container. (Has to be the same as the HOSTs IP. If you set the containers IP to 192.168.1.202 this has to be the same. If you use bridge it has to be the same as unRAIDs IP.)"
          schema:
            type: string
            default: "192.168.1.202"
        - variable: DNS_BIND_IP
          label: 'DNS_BIND_IP'
          description: "IP Address of cache container. (Has to be the same as the HOSTs IP. If you set the containers IP to 192.168.1.202 this has to be the same. If you use bridge it has to be the same as unRAIDs IP.)"
          schema:
            type: string
            default: "192.168.1.202"
        - variable: CACHE_MEM_SIZE
          label: 'CACHE_MEM_SIZE'
          description: "Memory size for the cache"
          schema:
            type: string
            default: "500m"
        - variable: CACHE_DISK_SIZE
          label: 'CACHE_DISK_SIZE'
          description: "Max size for the cache"
          schema:
            type: string
            default: "2000g"
        - variable: CACHE_MAX_AGE
          label: 'CACHE_MAX_AGE'
          description: "Max age for files in the cache"
          schema:
            type: string
            default: "150d"
        - variable: UPSTREAM_DNS
          label: 'UPSTREAM_DNS'
          description: "Container Variable UPSTREAMDNS"
          schema:
            type: string
            default: "1.1.1.1"
        - variable: USE_GENERIC_CACHE
          label: 'USE_GENERIC_CACHE'
          description: "Must be set to true to use generic cache"
          schema:
            type: string
            default: "true"
        - variable: DISABLE_ARENANET
          label: 'DISABLE_ARENANET'
          description: "Set to true to disable arenanet caching"
          schema:
            type: string
            default: ""
        - variable: DISABLE_BLIZZARD
          label: 'DISABLE_BLIZZARD'
          description: "Set to true to disable blizzard caching"
          schema:
            type: string
            default: ""
        - variable: DISABLE_CITYOFHEROES
          label: 'DISABLE_CITYOFHEROES'
          description: "Set to true to disable cityofheroes caching"
          schema:
            type: string
            default: ""
        - variable: DISABLE_DAYBREAK
          label: 'DISABLE_DAYBREAK'
          description: "Set to true to disable daybreak caching"
          schema:
            type: string
            default: ""
        - variable: DISABLE_EPICGAMES
          label: 'DISABLE_EPICGAMES'
          description: "Set to true to disable epicgames caching"
          schema:
            type: string
            default: ""
        - variable: DISABLE_FRONTIER
          label: 'DISABLE_FRONTIER'
          description: "Set to true to disable frontier caching"
          schema:
            type: string
            default: ""
        - variable: DISABLE_HIREZ
          label: 'DISABLE_HIREZ'
          description: "Set to true to disable hirez caching"
          schema:
            type: string
            default: ""
        - variable: DISABLE_NEVERWINTER
          label: 'DISABLE_NEVERWINTER'
          description: "Set to true to disable neverwinter caching"
          schema:
            type: string
            default: ""
        - variable: DISABLE_NEXUSMODS
          label: 'DISABLE_NEXUSMODS'
          description: "Set to true to disable nexusmods caching"
          schema:
            type: string
            default: ""
        - variable: DISABLE_NINTENDO
          label: 'DISABLE_NINTENDO'
          description: "Set to true to disable nintendo caching"
          schema:
            type: string
            default: ""
        - variable: DISABLE_ORIGIN
          label: 'DISABLE_ORIGIN'
          description: "Set to true to disable origin caching"
          schema:
            type: string
            default: ""
        - variable: DISABLE_RENEGADEX
          label: 'DISABLE_RENEGADEX'
          description: "Set to true to disable renegadex caching"
          schema:
            type: string
            default: ""
        - variable: DISABLE_RIOT
          label: 'DISABLE_RIOT'
          description: "Set to true to disable riot caching"
          schema:
            type: string
            default: ""
        - variable: DISABLE_ROCKSTAR
          label: 'DISABLE_ROCKSTAR'
          description: "Set to true to disable rockstar caching"
          schema:
            type: string
            default: ""
        - variable: DISABLE_SONY
          label: 'DISABLE_SONY'
          description: "Set to true to disable sony caching"
          schema:
            type: string
            default: ""
        - variable: DISABLE_STEAM
          label: 'DISABLE_STEAM'
          description: "Set to true to disable steam caching"
          schema:
            type: string
            default: ""
        - variable: DISABLE_TESO
          label: 'DISABLE_TESO'
          description: "Set to true to disable teso caching"
          schema:
            type: string
            default: ""
        - variable: DISABLE_TWITCH
          label: 'DISABLE_TWITCH'
          description: "Set to true to disable twitch caching"
          schema:
            type: string
            default: ""
        - variable: DISABLE_UPLAY
          label: 'DISABLE_UPLAY'
          description: "Set to true to disable uplay caching"
          schema:
            type: string
            default: ""
        - variable: DISABLE_WARFRAME
          label: 'DISABLE_WARFRAME'
          description: "Set to true to disable warframe caching"
          schema:
            type: string
            default: ""
        - variable: DISABLE_WARGAMING
          label: 'DISABLE_WARGAMING'
          description: "Set to true to disable wargaming caching"
          schema:
            type: string
            default: ""
        - variable: DISABLE_WSUS
          label: 'DISABLE_WSUS'
          description: "Set to true to disable windowsupdates caching"
          schema:
            type: string
            default: ""
        - variable: DISABLE_XBOXLIVE
          label: 'DISABLE_XBOXLIVE'
          description: "Set to true to disable xboxlive caching"
          schema:
            type: string
            default: ""

# Include{containerConfig}

  - variable: service
    group: "Networking and Services"
    label: "Configure Service(s)"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: main
          label: "Main Service"
          description: "The Primary service on which the healthcheck runs, often the webUI"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelector}
                    - variable: main
                      label: "Main Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 53
                              required: true
                          - variable: advanced
                            label: "Show Advanced settings"
                            schema:
                              type: boolean
                              default: false
                              show_subquestions_if: true
                              subquestions:
                                - variable: protocol
                                  label: "Port Type"
                                  schema:
                                    type: string
                                    default: UDP
                                    enum:
                                      - value: HTTP
                                        description: "HTTP"
                                      - value: "HTTPS"
                                        description: "HTTPS"
                                      - value: TCP
                                        description: "TCP"
                                      - value: "UDP"
                                        description: "UDP"
                                - variable: nodePort
                                  label: "Node Port (Optional)"
                                  description: "This port gets exposed to the node. Only considered when service type is NodePort, Simple or LoadBalancer"
                                  schema:
                                    type: int
                                    min: 9000
                                    max: 65535
                                - variable: targetPort
                                  label: "Target Port"
                                  description: "The internal(!) port on the container the Application runs on"
                                  schema:
                                    type: int
                                    default: 53

        - variable: httpport
          label: 'httpport service'
        - variable: httpport
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelector}
                    - variable: httpport
                      label: "httpport Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 80
                              required: true
                          - variable: advanced
                            label: "Show Advanced settings"
                            schema:
                              type: boolean
                              default: false
                              show_subquestions_if: true
                              subquestions:
                                - variable: enabled
                                  label: "Enable the port"
                                  schema:
                                    type: boolean
                                    default: true
                                - variable: protocol
                                  label: "Port Type"
                                  schema:
                                    type: string
                                    default: TCP
                                    enum:
                                      - value: HTTP
                                        description: "HTTP"
                                      - value: "HTTPS"
                                        description: "HTTPS"
                                      - value: TCP
                                        description: "TCP"
                                      - value: "UDP"
                                        description: "UDP"
                                - variable: nodePort
                                  label: "Node Port (Optional)"
                                  description: "This port gets exposed to the node. Only considered when service type is NodePort, Simple or LoadBalancer"
                                  schema:
                                    type: int
                                    min: 9000
                                    max: 65535
                                - variable: targetPort
                                  label: "Target Port"
                                  description: "The internal(!) port on the container the Application runs on"
                                  schema:
                                    type: int
                                    default: 80
        - variable: httpsport
          label: 'httpsport service'
        - variable: httpsport
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelector}
                    - variable: httpsport
                      label: "httpsport Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 443
                              required: true
                          - variable: advanced
                            label: "Show Advanced settings"
                            schema:
                              type: boolean
                              default: false
                              show_subquestions_if: true
                              subquestions:
                                - variable: enabled
                                  label: "Enable the port"
                                  schema:
                                    type: boolean
                                    default: true
                                - variable: protocol
                                  label: "Port Type"
                                  schema:
                                    type: string
                                    default: TCP
                                    enum:
                                      - value: HTTP
                                        description: "HTTP"
                                      - value: "HTTPS"
                                        description: "HTTPS"
                                      - value: TCP
                                        description: "TCP"
                                      - value: "UDP"
                                        description: "UDP"
                                - variable: nodePort
                                  label: "Node Port (Optional)"
                                  description: "This port gets exposed to the node. Only considered when service type is NodePort, Simple or LoadBalancer"
                                  schema:
                                    type: int
                                    min: 9000
                                    max: 65535
                                - variable: targetPort
                                  label: "Target Port"
                                  description: "The internal(!) port on the container the Application runs on"
                                  schema:
                                    type: int
                                    default: 443


  - variable: serviceexpert
    group: "Networking and Services"
    label: "Show Expert Config"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: hostNetwork
          group: "Networking and Services"
          label: "Host-Networking (Complicated)"
          schema:
            type: boolean
            default: false

# Include{serviceExpert}

# Include{serviceList}

  - variable: persistence
    label: "Integrated Persistent Storage"
    description: "Integrated Persistent Storage"
    group: "Storage and Persistence"
    schema:
      additional_attrs: true
      type: dict
      attrs:

        - variable: data
          label: "data Storage"
          description: "Location to store the cached files"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceAdvanced}
        - variable: dnslogs
          label: "dnslogs Storage"
          description: "Location to store the DNS logs"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceAdvanced}
        - variable: nginxlogs
          label: "nginxlogs Storage"
          description: "Location to store the Nginx logs"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceAdvanced}


# Include{persistenceList}


  - variable: ingress
    label: ""
    group: "Ingress"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: main
          label: "Main Ingress"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}

# Include{ingressTLS}

# Include{ingressTraefik}

# Include{ingressExpert}

# Include{ingressList}

# Include{security}

  - variable: advancedSecurity
    label: "Show Advanced Security Settings"
    group: "Security and Permissions"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: securityContext
          label: "Security Context"
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: privileged
                label: "Privileged mode"
                schema:
                  type: boolean
                  default: false
              - variable: readOnlyRootFilesystem
                label: "ReadOnly Root Filesystem"
                schema:
                  type: boolean
                  default: false
              - variable: allowPrivilegeEscalation
                label: "Allow Privilege Escalation"
                schema:
                  type: boolean
                  default: false
              - variable: runAsNonRoot
                label: "runAsNonRoot"
                schema:
                  type: boolean
                  default: false
# Include{securityContextAdvanced}

  - variable: podSecurityContext
    group: "Security and Permissions"
    label: "Pod Security Context"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: runAsUser
          label: "runAsUser"
          description: "The UserID of the user running the application"
          schema:
            type: int
            default: 0
        - variable: runAsGroup
          label: "runAsGroup"
          description: The groupID this App of the user running the application"
          schema:
            type: int
            default: 0
        - variable: fsGroup
          label: "fsGroup"
          description: "The group that should own ALL storage."
          schema:
            type: int
            default: 568
# Include{podSecurityContextAdvanced}


# Include{resources}

# Include{advanced}

# Include{addons}
