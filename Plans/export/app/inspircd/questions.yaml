# Include{groups}
portals:
  open:
    protocols:
      - "$kubernetes-resource_configmap_portal_protocol"
    host:
      - "$kubernetes-resource_configmap_portal_host"
    ports:
      - "$kubernetes-resource_configmap_portal_port"
questions:
  - variable: portal
    group: "Container Image"
    label: "Configure Portal Button"
    schema:
      type: dict
      hidden: true
      attrs:
        - variable: enabled
          label: "Enable"
          description: "enable the portal button"
          schema:
            hidden: true
            editable: false
            type: boolean
            default: true
# Include{global}

  - variable: controller
    group: "Controller"
    label: ""
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: advanced
          label: "Show Advanced Controller Settings"
          schema:
            type: boolean
            default: false
            show_subquestions_if: true
            subquestions:
              - variable: type
                description: "Please specify type of workload to deploy"
                label: "(Advanced) Controller Type"
                schema:
                  type: string
                  default: "deployment"
                  required: true
                  enum:
                    - value: "deployment"
                      description: "Deployment"
                    - value: "statefulset"
                      description: "Statefulset"
                    - value: "daemonset"
                      description: "Daemonset"
              - variable: replicas
                description: "Number of desired pod replicas"
                label: "Desired Replicas"
                schema:
                  type: int
                  default: 1
                  required: true
              - variable: strategy
                description: "Please specify type of workload to deploy"
                label: "(Advanced) Update Strategy"
                schema:
                  type: string
                  default: "Recreate"
                  required: true
                  enum:
                    - value: "Recreate"
                      description: "Recreate: Kill existing pods before creating new ones"
                    - value: "RollingUpdate"
                      description: "RollingUpdate: Create new pods and then kill old ones"
                    - value: "OnDelete"
                      description: "(Legacy) OnDelete: ignore .spec.template changes"
# Include{controllerExpert}

  - variable: env
    group: "Container Configuration"
    label: "Image Environment"
    schema:
      additional_attrs: true
      type: dict
      attrs:

        - variable: INSP_NET_SUFFIX
          label: 'INSP_NET_SUFFIX'
          description: "Suffix used behind the server name (in this format .example.com)"
          schema:
            type: string
            default: ".example.com"
        - variable: INSP_NET_NAME
          label: 'INSP_NET_NAME'
          description: "Name advertised as network name"
          schema:
            type: string
            default: "InspIRCD"
        - variable: INSP_ADMIN_NAME
          label: 'INSP_ADMIN_NAME'
          description: "Name showed by the admin command"
          schema:
            type: string
            default: "Jonny English"
        - variable: INSP_ADMIN_NICK
          label: 'INSP_ADMIN_NICK'
          description: "Nick showed by the admin command"
          schema:
            type: string
            default: "MI5"
        - variable: INSP_ADMIN_EMAIL
          label: 'INSP_ADMIN_EMAIL'
          description: "E-mail shown by the admin command"
          schema:
            type: string
            default: "jonny.english@example.com"
        - variable: INSP_ENABLE_DNSBL
          label: 'INSP_ENABLE_DNSBL'
          description: "Set to no to disable DNSBLs (DNS-based block list - set to yes or no)"
          schema:
            type: string
            default: "yes"
        - variable: INSP_CONNECT_PASSWORD
          label: 'INSP_CONNECT_PASSWORD'
          description: "Password either as plaintext, or hash value - if you dont want a password leave this variable empty(Make sure you escape special chars like  or &amp; if needed)"
          schema:
            type: string
            default: ""
        - variable: INSP_CONNECT_HASH
          label: 'INSP_CONNECT_HASH'
          description: "Hashing algorithm for the Connection Password  - if you dont entered a password leave this variable empty (e.g. hmac-sha256, hmac-md5, hmac-ripemd160, md5, ripemd160, sha256)"
          schema:
            type: string
            default: ""
        - variable: INSP_OPER_NAME
          label: 'INSP_OPER_NAME'
          description: "Oper name"
          schema:
            type: string
            default: "oper"
        - variable: INSP_OPER_HOST
          label: 'INSP_OPER_HOST'
          description: "Hosts allowed to oper up (If you dont want to connect OPs from outside change for example to @localhost or what your hostname matches that the OP should connect)"
          schema:
            type: string
            default: "*@*"
        - variable: INSP_OPER_PASSWORD_HASH
          label: 'INSP_OPER_PASSWORD_HASH'
          description: "Hash value for your oper password hash (to generate a password hash create the server without the hash, connect to the InspIRCd and type in mkpasswd HASHMALGORITHM PASSORD eg mkpasswd hmac-sha256 superstronpassword)"
          schema:
            type: string
            default: ""
        - variable: INSP_OPER_HASH
          label: 'INSP_OPER_HASH'
          description: "Hashing algorithm for the Operator Password - if you dont entered a password leave this variable empty (e.g. hmac-sha256, hmac-md5, hmac-ripemd160, md5, ripemd160, sha256)"
          schema:
            type: string
            default: "hmac-sha256"
        - variable: INSP_OPER_SSLONLY
          label: 'INSP_OPER_SSLONLY'
          description: "Allow oper up only while using TLS (set to yes or no)"
          schema:
            type: string
            default: "yes"
        - variable: INSP_TLS_CN
          label: 'INSP_TLS_CN'
          description: "Common name of the certificate"
          schema:
            type: string
            default: "irc.example.com"
        - variable: INSP_TLS_MAIL
          label: 'INSP_TLS_MAIL'
          description: "Mail address represented in the certificate"
          schema:
            type: string
            default: "nomail@example.com"
        - variable: INSP_TLS_UNIT
          label: 'INSP_TLS_UNIT'
          description: "Unit responsible for the service"
          schema:
            type: string
            default: "Server Admins"
        - variable: INSP_TLS_ORG
          label: 'INSP_TLS_ORG'
          description: "Organisation name"
          schema:
            type: string
            default: "Example IRC Network"
        - variable: INSP_TLS_LOC
          label: 'INSP_TLS_LOC'
          description: "City name"
          schema:
            type: string
            default: "Example City"
        - variable: INSP_TLS_STATE
          label: 'INSP_TLS_STATE'
          description: "State name"
          schema:
            type: string
            default: "Example State"
        - variable: INSP_TLS_COUNTRY
          label: 'INSP_TLS_COUNTRY'
          description: "Country Code by ISO 3166-1 (to get the country code visit httpsen.wikipedia.orgwikiISO3166-1)"
          schema:
            type: string
            default: "XZ"
        - variable: INSP_TLS_DURATION
          label: 'INSP_TLS_DURATION'
          description: "Duration until the certificate expires"
          schema:
            type: string
            default: "365"
        - variable: INSP_SERVICES_IPADDR
          label: 'INSP_SERVICES_IPADDR'
          description: "Specify the IP Address from where the Services are connecting (if you run Anope on the same Unraid machine it is usually the IP address of Unraid)"
          schema:
            type: string
            default: ""
        - variable: INSP_SERVICES_ALLOWMASK
          label: 'INSP_SERVICES_ALLOWMASK'
          description: "CIDR of services source IP (If you run your Services on the same Network as your IRCd you dont have to fill in this value)"
          schema:
            type: string
            default: ""
        - variable: INSP_SERVICES_HIDDEN
          label: 'INSP_SERVICES_HIDDEN'
          description: "Hide services from MAP and LINKS (valid options are yes or no, change only if you know what you are doing!)"
          schema:
            type: string
            default: "no"
        - variable: INSP_SERVICES_TLS_ON
          label: 'INSP_SERVICES_TLS_ON'
          description: "Turn on TLS encryption for the Services link (this is be no proble if you connect it to your internal network since it only talks internally to your Services)."
          schema:
            type: string
            default: "no"
        - variable: INSP_SERVICES_PASSWORD
          label: 'INSP_SERVICES_PASSWORD'
          description: "Password send by this server and send by the services"
          schema:
            type: string
            default: ""
        - variable: UMASK
          label: 'UMASK'
          description: "Container Variable UMASK"
          schema:
            type: string
            default: "000"
        - variable: DATA_PERM
          label: 'DATA_PERM'
          description: "Container Variable DATAPERM"
          schema:
            type: string
            default: "770"

# Include{containerConfig}

  - variable: service
    group: "Networking and Services"
    label: "Configure Service(s)"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: main
          label: "Main Service"
          description: "The Primary service on which the healthcheck runs, often the webUI"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelector}
                    - variable: main
                      label: "Main Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 6667
                              required: true
                          - variable: advanced
                            label: "Show Advanced settings"
                            schema:
                              type: boolean
                              default: false
                              show_subquestions_if: true
                              subquestions:
                                - variable: protocol
                                  label: "Port Type"
                                  schema:
                                    type: string
                                    default: TCP
                                    enum:
                                      - value: HTTP
                                        description: "HTTP"
                                      - value: "HTTPS"
                                        description: "HTTPS"
                                      - value: TCP
                                        description: "TCP"
                                      - value: "UDP"
                                        description: "UDP"
                                - variable: nodePort
                                  label: "Node Port (Optional)"
                                  description: "This port gets exposed to the node. Only considered when service type is NodePort, Simple or LoadBalancer"
                                  schema:
                                    type: int
                                    min: 9000
                                    max: 65535
                                - variable: targetPort
                                  label: "Target Port"
                                  description: "The internal(!) port on the container the Application runs on"
                                  schema:
                                    type: int
                                    default: 6667

        - variable: clients,tls
          label: 'clients,tls service'
          description: "TCP Clients Connection Port (Encrypted)"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelector}
                    - variable: clients,tls
                      label: "clients,tls Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 6697
                              required: true
                          - variable: advanced
                            label: "Show Advanced settings"
                            schema:
                              type: boolean
                              default: false
                              show_subquestions_if: true
                              subquestions:
                                - variable: enabled
                                  label: "Enable the port"
                                  schema:
                                    type: boolean
                                    default: true
                                - variable: protocol
                                  label: "Port Type"
                                  schema:
                                    type: string
                                    default: TCP
                                    enum:
                                      - value: HTTP
                                        description: "HTTP"
                                      - value: "HTTPS"
                                        description: "HTTPS"
                                      - value: TCP
                                        description: "TCP"
                                      - value: "UDP"
                                        description: "UDP"
                                - variable: nodePort
                                  label: "Node Port (Optional)"
                                  description: "This port gets exposed to the node. Only considered when service type is NodePort, Simple or LoadBalancer"
                                  schema:
                                    type: int
                                    min: 9000
                                    max: 65535
                                - variable: targetPort
                                  label: "Target Port"
                                  description: "The internal(!) port on the container the Application runs on"
                                  schema:
                                    type: int
                                    default: 6697
        - variable: server,plainte
          label: 'server,plainte service'
          description: "TCP Server Port (Unencrypted - You dont have to forward this port if you use this as a standalone IRC Server)"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelector}
                    - variable: server,plainte
                      label: "server,plainte Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 7000
                              required: true
                          - variable: advanced
                            label: "Show Advanced settings"
                            schema:
                              type: boolean
                              default: false
                              show_subquestions_if: true
                              subquestions:
                                - variable: enabled
                                  label: "Enable the port"
                                  schema:
                                    type: boolean
                                    default: true
                                - variable: protocol
                                  label: "Port Type"
                                  schema:
                                    type: string
                                    default: TCP
                                    enum:
                                      - value: HTTP
                                        description: "HTTP"
                                      - value: "HTTPS"
                                        description: "HTTPS"
                                      - value: TCP
                                        description: "TCP"
                                      - value: "UDP"
                                        description: "UDP"
                                - variable: nodePort
                                  label: "Node Port (Optional)"
                                  description: "This port gets exposed to the node. Only considered when service type is NodePort, Simple or LoadBalancer"
                                  schema:
                                    type: int
                                    min: 9000
                                    max: 65535
                                - variable: targetPort
                                  label: "Target Port"
                                  description: "The internal(!) port on the container the Application runs on"
                                  schema:
                                    type: int
                                    default: 7000
        - variable: server,tls
          label: 'server,tls service'
          description: "TCP Server Port (Encrypted - You dont have to forward this port if you use this as a standalone IRC Server)"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelector}
                    - variable: server,tls
                      label: "server,tls Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 7001
                              required: true
                          - variable: advanced
                            label: "Show Advanced settings"
                            schema:
                              type: boolean
                              default: false
                              show_subquestions_if: true
                              subquestions:
                                - variable: enabled
                                  label: "Enable the port"
                                  schema:
                                    type: boolean
                                    default: true
                                - variable: protocol
                                  label: "Port Type"
                                  schema:
                                    type: string
                                    default: TCP
                                    enum:
                                      - value: HTTP
                                        description: "HTTP"
                                      - value: "HTTPS"
                                        description: "HTTPS"
                                      - value: TCP
                                        description: "TCP"
                                      - value: "UDP"
                                        description: "UDP"
                                - variable: nodePort
                                  label: "Node Port (Optional)"
                                  description: "This port gets exposed to the node. Only considered when service type is NodePort, Simple or LoadBalancer"
                                  schema:
                                    type: int
                                    min: 9000
                                    max: 65535
                                - variable: targetPort
                                  label: "Target Port"
                                  description: "The internal(!) port on the container the Application runs on"
                                  schema:
                                    type: int
                                    default: 7001


  - variable: serviceexpert
    group: "Networking and Services"
    label: "Show Expert Config"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: hostNetwork
          group: "Networking and Services"
          label: "Host-Networking (Complicated)"
          schema:
            type: boolean
            default: false

# Include{serviceExpert}

# Include{serviceList}

  - variable: persistence
    label: "Integrated Persistent Storage"
    description: "Integrated Persistent Storage"
    group: "Storage and Persistence"
    schema:
      additional_attrs: true
      type: dict
      attrs:

        - variable: datapath
          label: "datapath Storage"
          description: "Your configuration is located in ...conf (WARNING change the main configurations via the variables here and not the files which say that you should dont edit them)"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceAdvanced}


# Include{persistenceList}


  - variable: ingress
    label: ""
    group: "Ingress"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: main
          label: "Main Ingress"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}

# Include{ingressTLS}

# Include{ingressTraefik}

# Include{ingressExpert}

# Include{ingressList}

# Include{security}

  - variable: advancedSecurity
    label: "Show Advanced Security Settings"
    group: "Security and Permissions"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: securityContext
          label: "Security Context"
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: privileged
                label: "Privileged mode"
                schema:
                  type: boolean
                  default: false
              - variable: readOnlyRootFilesystem
                label: "ReadOnly Root Filesystem"
                schema:
                  type: boolean
                  default: false
              - variable: allowPrivilegeEscalation
                label: "Allow Privilege Escalation"
                schema:
                  type: boolean
                  default: false
              - variable: runAsNonRoot
                label: "runAsNonRoot"
                schema:
                  type: boolean
                  default: false
# Include{securityContextAdvanced}

  - variable: podSecurityContext
    group: "Security and Permissions"
    label: "Pod Security Context"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: runAsUser
          label: "runAsUser"
          description: "The UserID of the user running the application"
          schema:
            type: int
            default: 0
        - variable: runAsGroup
          label: "runAsGroup"
          description: The groupID this App of the user running the application"
          schema:
            type: int
            default: 0
        - variable: fsGroup
          label: "fsGroup"
          description: "The group that should own ALL storage."
          schema:
            type: int
            default: 568
# Include{podSecurityContextAdvanced}


# Include{resources}

# Include{advanced}

# Include{addons}
