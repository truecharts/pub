# Include{groups}
portals: {}
questions:
  - variable: portal
    group: "Container Image"
    label: "Configure Portal Button"
    schema:
      type: dict
      hidden: true
      attrs:
        - variable: enabled
          label: "Enable"
          description: "enable the portal button"
          schema:
            hidden: true
            editable: false
            type: boolean
            default: false
# Include{global}

  - variable: controller
    group: "Controller"
    label: ""
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: advanced
          label: "Show Advanced Controller Settings"
          schema:
            type: boolean
            default: false
            show_subquestions_if: true
            subquestions:
              - variable: type
                description: "Please specify type of workload to deploy"
                label: "(Advanced) Controller Type"
                schema:
                  type: string
                  default: "deployment"
                  required: true
                  enum:
                    - value: "deployment"
                      description: "Deployment"
                    - value: "statefulset"
                      description: "Statefulset"
                    - value: "daemonset"
                      description: "Daemonset"
              - variable: replicas
                description: "Number of desired pod replicas"
                label: "Desired Replicas"
                schema:
                  type: int
                  default: 1
                  required: true
              - variable: strategy
                description: "Please specify type of workload to deploy"
                label: "(Advanced) Update Strategy"
                schema:
                  type: string
                  default: "Recreate"
                  required: true
                  enum:
                    - value: "Recreate"
                      description: "Recreate: Kill existing pods before creating new ones"
                    - value: "RollingUpdate"
                      description: "RollingUpdate: Create new pods and then kill old ones"
                    - value: "OnDelete"
                      description: "(Legacy) OnDelete: ignore .spec.template changes"
# Include{controllerExpert}

  - variable: env
    group: "Container Configuration"
    label: "Image Environment"
    schema:
      additional_attrs: true
      type: dict
      attrs:

        - variable: QBT_CONFIG
          label: 'QBT_CONFIG'
          description: "This is used if you want to use a different name for your config.yml. Example tv.yml"
          schema:
            type: string
            default: "config.yml"
        - variable: QBT_LOGFILE
          label: 'QBT_LOGFILE'
          description: "This is used if you want to use a different name for your log file. Example tv.log"
          schema:
            type: string
            default: "activity.log"
        - variable: QBT_RUN
          label: 'QBT_RUN'
          description: "Run without the scheduler. Script will exit after completion."
          schema:
            type: string
            default: "False"
        - variable: QBT_SCHEDULE
          label: 'QBT_SCHEDULE'
          description: "Schedule to run every x minutes. (Default set to 30)"
          schema:
            type: string
            default: "30"
        - variable: QBT_CROSS_SEED
          label: 'QBT_CROSS_SEED'
          description: "Use this after running cross-seed script to add torrents from the cross-seed output folder to qBittorrent"
          schema:
            type: string
            default: "False"
        - variable: QBT_RECHECK
          label: 'QBT_RECHECK'
          description: "Recheck paused torrents sorted by lowest size. Resume if Completed.	"
          schema:
            type: string
            default: "False"
        - variable: QBT_CAT_UPDATE
          label: 'QBT_CAT_UPDATE'
          description: "Use this if you would like to update your categories.	"
          schema:
            type: string
            default: "False"
        - variable: QBT_TAG_UPDATE
          label: 'QBT_TAG_UPDATE'
          description: "Use this if you would like to update your tags. (Only adds tags to untagged torrents)	"
          schema:
            type: string
            default: "False"
        - variable: QBT_REM_UNREGISTERED
          label: 'QBT_REM_UNREGISTERED'
          description: "Use this if you would like to remove unregistered torrents. (It will the delete data &amp; torrent if it is not being cross-seeded, otherwise it will just remove the torrent without deleting data)	"
          schema:
            type: string
            default: "False"
        - variable: QBT_REM_ORPHANED
          label: 'QBT_REM_ORPHANED'
          description: "Use this if you would like to remove orphaned files from your rootdir directory that are not referenced by any torrents. It will scan your rootdir directory and compare it with what is in qBittorrent. Any data not referenced in qBittorrent will be moved into datatorrentsorphaneddata folder for you to reviewdelete.	"
          schema:
            type: string
            default: "False"
        - variable: QBT_TAG_NOHARDLINKS
          label: 'QBT_TAG_NOHARDLINKS'
          description: "Use this to tag any torrents that do not have any hard links associated with any of the files. This is useful for those that use SonarrRadarr that hard links your media files with the torrents for seeding. When files get upgraded they no longer become linked with your media therefore will be tagged with a new tag noHL. You can then safely deleteremove these torrents to free up any extra space that is not being used by your media folder.	"
          schema:
            type: string
            default: "False"
        - variable: QBT_SKIP_RECYCLE
          label: 'QBT_SKIP_RECYCLE'
          description: "Use this to skip emptying the Reycle Bin folder (rootdir.RecycleBin).	"
          schema:
            type: string
            default: "False"
        - variable: QBT_DRY_RUN
          label: 'QBT_DRY_RUN'
          description: "If you would like to see what is gonna happen but not actually movedelete or tagcategorize anything.	"
          schema:
            type: string
            default: "False"
        - variable: QBT_LOG_LEVEL
          label: 'QBT_LOG_LEVEL'
          description: "Change the ouput log level.	"
          schema:
            type: string
            default: "INFO"
        - variable: QBT_DIVIDER
          label: 'QBT_DIVIDER'
          description: "Character that divides the sections (Default =)	"
          schema:
            type: string
            default: "="
        - variable: QBT_WIDTH
          label: 'QBT_WIDTH'
          description: "Screen Width (Default 100)	"
          schema:
            type: string
            default: "100"


  - variable: serviceexpert
    group: "Networking and Services"
    label: "Show Expert Config"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: hostNetwork
          group: "Networking and Services"
          label: "Host-Networking (Complicated)"
          schema:
            type: boolean
            default: false

# Include{serviceExpert}

# Include{serviceList}

  - variable: persistence
    label: "Integrated Persistent Storage"
    description: "Integrated Persistent Storage"
    group: "Storage and Persistence"
    schema:
      additional_attrs: true
      type: dict
      attrs:

        - variable: root_dir
          label: "root_dir Storage"
          description: "Container Path Samepathasqbittorrentdownloads"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceAdvanced}
        - variable: config
          label: "config Storage"
          description: "Container Path config"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceAdvanced}


# Include{persistenceList}


# Include{ingressList}

# Include{security}

  - variable: advancedSecurity
    label: "Show Advanced Security Settings"
    group: "Security and Permissions"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: securityContext
          label: "Security Context"
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: privileged
                label: "Privileged mode"
                schema:
                  type: boolean
                  default: false
              - variable: readOnlyRootFilesystem
                label: "ReadOnly Root Filesystem"
                schema:
                  type: boolean
                  default: false
              - variable: allowPrivilegeEscalation
                label: "Allow Privilege Escalation"
                schema:
                  type: boolean
                  default: false
              - variable: runAsNonRoot
                label: "runAsNonRoot"
                schema:
                  type: boolean
                  default: false
# Include{securityContextAdvanced}

  - variable: podSecurityContext
    group: "Security and Permissions"
    label: "Pod Security Context"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: runAsUser
          label: "runAsUser"
          description: "The UserID of the user running the application"
          schema:
            type: int
            default: 0
        - variable: runAsGroup
          label: "runAsGroup"
          description: The groupID this App of the user running the application"
          schema:
            type: int
            default: 0
        - variable: fsGroup
          label: "fsGroup"
          description: "The group that should own ALL storage."
          schema:
            type: int
            default: 568
# Include{podSecurityContextAdvanced}


# Include{resources}

# Include{advanced}

# Include{addons}
