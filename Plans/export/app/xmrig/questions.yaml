# Include{groups}
portals: {}
questions:
  - variable: portal
    group: "Container Image"
    label: "Configure Portal Button"
    schema:
      type: dict
      hidden: true
      attrs:
        - variable: enabled
          label: "Enable"
          description: "enable the portal button"
          schema:
            hidden: true
            editable: false
            type: boolean
            default: false
# Include{global}

  - variable: controller
    group: "Controller"
    label: ""
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: advanced
          label: "Show Advanced Controller Settings"
          schema:
            type: boolean
            default: false
            show_subquestions_if: true
            subquestions:
              - variable: type
                description: "Please specify type of workload to deploy"
                label: "(Advanced) Controller Type"
                schema:
                  type: string
                  default: "deployment"
                  required: true
                  enum:
                    - value: "deployment"
                      description: "Deployment"
                    - value: "statefulset"
                      description: "Statefulset"
                    - value: "daemonset"
                      description: "Daemonset"
              - variable: replicas
                description: "Number of desired pod replicas"
                label: "Desired Replicas"
                schema:
                  type: int
                  default: 1
                  required: true
              - variable: strategy
                description: "Please specify type of workload to deploy"
                label: "(Advanced) Update Strategy"
                schema:
                  type: string
                  default: "Recreate"
                  required: true
                  enum:
                    - value: "Recreate"
                      description: "Recreate: Kill existing pods before creating new ones"
                    - value: "RollingUpdate"
                      description: "RollingUpdate: Create new pods and then kill old ones"
                    - value: "OnDelete"
                      description: "(Legacy) OnDelete: ignore .spec.template changes"
# Include{controllerExpert}

  - variable: env
    group: "Container Configuration"
    label: "Image Environment"
    schema:
      additional_attrs: true
      type: dict
      attrs:

        - variable: POOL
          label: 'POOL'
          description: "Address for your mining pool. Eg. xmr-au1.nanopool.org14444"
          schema:
            type: string
            default: "xmr-au1.nanopool.org:14444"
        - variable: WALLET
          label: 'WALLET'
          description: "Wallet address for receiving mined coin. If you are privacy conscious, you can redact this in logs posted to the support thread by replacing it with WALLET. If you use Monero, sharing this address will only allow people to send you Monero and possibly identify you if you send someone else Monero, but being a privacy oriented coin its entirely up to you."
          schema:
            type: string
            default: "84e8UJvXHDGVfE5HZDQfhn3Kh3RGJKebz31G7D4H24TLPMe9x7bQLBw8iyBhNx9USXB8MhvhBe3DyVW1LcuVAf4jBiADNLw"
        - variable: WORKER
          label: 'WORKER'
          description: "Enter a name for your worker. Some pools use a hidden option with this (Nanopool included) that allows you to change your payment threshold on their website. If you want to use this option, you can change this to workernameemail, eg. Unraidtest@example.com, where test@example.com is your own email address. This option is basically a password. Please take note that if you post your logs in the support thread you would be best to redact the email address, eg. change out the instances of your email with @. to prevent your email address being posted in a public forum."
          schema:
            type: string
            default: "Unraid"
        - variable: ADDITIONAL
          label: 'ADDITIONAL'
          description: "Please leave --no-colour, as Unraids webUI log viewer does not respond well to this option being disabled.  If you plan on using an AMD card for GPU mining, please add --opencl; the field would then read --no-colour --opencl, please dont miss the variables below.  If you plan on using an Nvidia card for GPU mining, please add --cuda; the field would then read --no-colour --cuda "
          schema:
            type: string
            default: "--no-color "
        - variable: DONATE
          label: 'DONATE'
          description: "% that you would like to donate. Enter a whole number between 0-100, no symbols."
          schema:
            type: string
            default: "1"
        - variable: FEE
          label: 'FEE'
          description: "Select where you would like to donate the developer fee. Options are dev-fee, lnxd-fee and no-fee."
          schema:
            type: string
            default: "lnxd-fee"
        - variable: COIN
          label: 'COIN'
          description: "Select a coin to mine. Options are monero, arqma and dero. You can optionally disable this to use the --algo flag in Additional XMRig Arguments by setting this to x."
          schema:
            type: string
            default: "monero"
        - variable: DRIVERV
          label: 'DRIVERV'
          description: "Please note while you can mine Monero with a GPU, it is designed to be mined with a CPU. If you have a GPU, please confirm it is not more profitable to mine a currency that does not intentionally bottleneck GPU mining.  Set 20.20 for AMD, other options are for testing purposes only (18.20, 20.45, 20.50). If you have an Nvidia card, enter CUDA  Please note that this container will not work with both AMD Drivers and Cuda installed at the same time. if you want to do this, please set this container up for one and create a second, separate container for the other.  Please also note that if you use the CUDA value, the container will end up around 3gb in size and take a very long time to start after updates."
          schema:
            type: string
            default: ""
        - variable: NVIDIA_VISIBLE_DEVICES
          label: 'NVIDIA_VISIBLE_DEVICES'
          description: "Nvidia Only Enter your GPU UUID here (only required if you plan to mine with an Nvidia GPU otherwise leave this empty. Dont forget to add --runtime=nvidia to your Extra Parameters in the Advanced View)."
          schema:
            type: string
            default: ""
        - variable: NVIDIA_DRIVER_CAPABILITIES
          label: 'NVIDIA_DRIVER_CAPABILITIES'
          description: "Please leave this set to the default option of all if you arent sure what to put here. This value can be left in the template even if you dont want to mine with an Nvidia GPU."
          schema:
            type: string
            default: "all"


  - variable: serviceexpert
    group: "Networking and Services"
    label: "Show Expert Config"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: hostNetwork
          group: "Networking and Services"
          label: "Host-Networking (Complicated)"
          schema:
            type: boolean
            default: false

# Include{serviceExpert}

# Include{serviceList}


# Include{persistenceList}


# Include{ingressList}

# Include{security}

  - variable: advancedSecurity
    label: "Show Advanced Security Settings"
    group: "Security and Permissions"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: securityContext
          label: "Security Context"
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: privileged
                label: "Privileged mode"
                schema:
                  type: boolean
                  default: false
              - variable: readOnlyRootFilesystem
                label: "ReadOnly Root Filesystem"
                schema:
                  type: boolean
                  default: false
              - variable: allowPrivilegeEscalation
                label: "Allow Privilege Escalation"
                schema:
                  type: boolean
                  default: false
              - variable: runAsNonRoot
                label: "runAsNonRoot"
                schema:
                  type: boolean
                  default: false
# Include{securityContextAdvanced}

  - variable: podSecurityContext
    group: "Security and Permissions"
    label: "Pod Security Context"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: runAsUser
          label: "runAsUser"
          description: "The UserID of the user running the application"
          schema:
            type: int
            default: 0
        - variable: runAsGroup
          label: "runAsGroup"
          description: The groupID this App of the user running the application"
          schema:
            type: int
            default: 0
        - variable: fsGroup
          label: "fsGroup"
          description: "The group that should own ALL storage."
          schema:
            type: int
            default: 568
# Include{podSecurityContextAdvanced}


# Include{resources}

# Include{advanced}

# Include{addons}
