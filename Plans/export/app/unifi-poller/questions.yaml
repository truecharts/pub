# Include{groups}
portals: {}
questions:
  - variable: portal
    group: "Container Image"
    label: "Configure Portal Button"
    schema:
      type: dict
      hidden: true
      attrs:
        - variable: enabled
          label: "Enable"
          description: "enable the portal button"
          schema:
            hidden: true
            editable: false
            type: boolean
            default: false
# Include{global}

  - variable: controller
    group: "Controller"
    label: ""
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: advanced
          label: "Show Advanced Controller Settings"
          schema:
            type: boolean
            default: false
            show_subquestions_if: true
            subquestions:
              - variable: type
                description: "Please specify type of workload to deploy"
                label: "(Advanced) Controller Type"
                schema:
                  type: string
                  default: "deployment"
                  required: true
                  enum:
                    - value: "deployment"
                      description: "Deployment"
                    - value: "statefulset"
                      description: "Statefulset"
                    - value: "daemonset"
                      description: "Daemonset"
              - variable: replicas
                description: "Number of desired pod replicas"
                label: "Desired Replicas"
                schema:
                  type: int
                  default: 1
                  required: true
              - variable: strategy
                description: "Please specify type of workload to deploy"
                label: "(Advanced) Update Strategy"
                schema:
                  type: string
                  default: "Recreate"
                  required: true
                  enum:
                    - value: "Recreate"
                      description: "Recreate: Kill existing pods before creating new ones"
                    - value: "RollingUpdate"
                      description: "RollingUpdate: Create new pods and then kill old ones"
                    - value: "OnDelete"
                      description: "(Legacy) OnDelete: ignore .spec.template changes"
# Include{controllerExpert}

  - variable: env
    group: "Container Configuration"
    label: "Image Environment"
    schema:
      additional_attrs: true
      type: dict
      attrs:

        - variable: UP_POLLER_DEBUG
          label: 'UP_POLLER_DEBUG'
          description: "Container Variable UPPOLLERDEBUG - Setting true includes more log output."
          schema:
            type: string
            default: ""
        - variable: UP_POLLER_QUIET
          label: 'UP_POLLER_QUIET'
          description: "Container Variable UPPOLLERQUIET - Setting true disables most log output."
          schema:
            type: string
            default: ""
        - variable: UP_UNIFI_CONTROLLER_0_URL
          label: 'UP_UNIFI_CONTROLLER_0_URL'
          description: "Container Variable UPUNIFICONTROLLER0URL - URL for UniFi controller."
          schema:
            type: string
            default: ""
        - variable: UP_UNIFI_CONTROLLER_0_USER
          label: 'UP_UNIFI_CONTROLLER_0_USER'
          description: "Container Variable UPUNIFICONTROLLER0USER - Username for UniFi Controller."
          schema:
            type: string
            default: "unifipoller"
        - variable: UP_UNIFI_CONTROLLER_0_PASS
          label: 'UP_UNIFI_CONTROLLER_0_PASS'
          description: "Container Variable UPUNIFICONTROLLER0PASS - Password for UniFi Controller."
          schema:
            type: string
            default: ""
        - variable: UP_UNIFI_CONTROLLER_0_SAVE_DPI
          label: 'UP_UNIFI_CONTROLLER_0_SAVE_DPI'
          description: "Container Variable UPUNIFICONTROLLER0SAVEDPI - Poll and save deep packet inspection data. This is a lot of data, and it must be enabled on the controller."
          schema:
            type: string
            default: ""
        - variable: UP_UNIFI_CONTROLLER_0_SAVE_IDS
          label: 'UP_UNIFI_CONTROLLER_0_SAVE_IDS'
          description: "Container Variable UPUNIFICONTROLLER0SAVEIDS - Save intrusion detection data (InfluxDB only). This data does not contain graphable metrics."
          schema:
            type: string
            default: ""
        - variable: UP_UNIFI_CONTROLLER_0_SAVE_SITES
          label: 'UP_UNIFI_CONTROLLER_0_SAVE_SITES'
          description: "Container Value UPUNIFICONTROLLER0SAVESITES - Set this to false to save space and resources in InfluxDB. This data powers the Network Sites dashboard."
          schema:
            type: string
            default: ""
        - variable: UP_UNIFI_CONTROLLER_0_SITES_0
          label: 'UP_UNIFI_CONTROLLER_0_SITES_0'
          description: "Container Variable UPUNIFICONTROLLER0SITES0 - List of sites to poll on controller, comma separated. Use cryptic ID values here; set to all for all sites."
          schema:
            type: string
            default: "all"
        - variable: UP_UNIFI_CONTROLLER_0_VERIFY_SSL
          label: 'UP_UNIFI_CONTROLLER_0_VERIFY_SSL'
          description: "Container Variable UPUNIFICONTROLLER0VERIFYSSL - Enable this if you have a valid SSL cert on your controller."
          schema:
            type: string
            default: ""
        - variable: UP_INFLUXDB_URL
          label: 'UP_INFLUXDB_URL'
          description: "Container Variable UPINFLUXDBURL - URL for InfluxDB. Not important if using Prometheus only."
          schema:
            type: string
            default: ""
        - variable: UP_INFLUXDB_USER
          label: 'UP_INFLUXDB_USER'
          description: "Container Variable UPINFLUXDBUSER - Username for InfluxDB. Usually unimportant because InfluxDB has no auth by default."
          schema:
            type: string
            default: "unifipoller"
        - variable: UP_INFLUXDB_PASS
          label: 'UP_INFLUXDB_PASS'
          description: "Container Variable UPINFLUXDBPASS - Password for InfluxDB (if required)"
          schema:
            type: string
            default: ""
        - variable: UP_INFLUXDB_DB
          label: 'UP_INFLUXDB_DB'
          description: "Container Variable UPINFLUXDBDB - InfluxDB database name. Create this first with CREATE DATABASE unifi"
          schema:
            type: string
            default: ""
        - variable: UP_INFLUXDB_INTERVAL
          label: 'UP_INFLUXDB_INTERVAL'
          description: "Container Variable UPINFLUXDBINTERVAL - Polling interval for saving metrics into InfluxDB. 30s-90s recommend."
          schema:
            type: string
            default: "30s"
        - variable: UP_INFLUXDB_DISABLE
          label: 'UP_INFLUXDB_DISABLE'
          description: "Container Variable UPINFLUXDBDISABLE - Disable InfluxDB polling. Set this true if you only use Prometheus."
          schema:
            type: string
            default: ""
        - variable: UP_PROMETHEUS_HTTP_LISTEN
          label: 'UP_PROMETHEUS_HTTP_LISTEN'
          description: "Container Value UPPROMETHEUSHTTPLISTEN - IP and port poller listens on for HTTP Prometheus scrapes. Must be in 0.0.0.0port format."
          schema:
            type: string
            default: "0.0.0.0:9031"
        - variable: UP_PROMETHEUS_DISABLE
          label: 'UP_PROMETHEUS_DISABLE'
          description: "Container Variable UPPROMETHEUSDISABLE - Disable Prometheus listener. Set true if you only use InfluxDB."
          schema:
            type: string
            default: ""


  - variable: serviceexpert
    group: "Networking and Services"
    label: "Show Expert Config"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: hostNetwork
          group: "Networking and Services"
          label: "Host-Networking (Complicated)"
          schema:
            type: boolean
            default: false

# Include{serviceExpert}

# Include{serviceList}


# Include{persistenceList}


# Include{ingressList}

# Include{security}

  - variable: advancedSecurity
    label: "Show Advanced Security Settings"
    group: "Security and Permissions"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: securityContext
          label: "Security Context"
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: privileged
                label: "Privileged mode"
                schema:
                  type: boolean
                  default: false
              - variable: readOnlyRootFilesystem
                label: "ReadOnly Root Filesystem"
                schema:
                  type: boolean
                  default: false
              - variable: allowPrivilegeEscalation
                label: "Allow Privilege Escalation"
                schema:
                  type: boolean
                  default: false
              - variable: runAsNonRoot
                label: "runAsNonRoot"
                schema:
                  type: boolean
                  default: false
# Include{securityContextAdvanced}

  - variable: podSecurityContext
    group: "Security and Permissions"
    label: "Pod Security Context"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: runAsUser
          label: "runAsUser"
          description: "The UserID of the user running the application"
          schema:
            type: int
            default: 0
        - variable: runAsGroup
          label: "runAsGroup"
          description: The groupID this App of the user running the application"
          schema:
            type: int
            default: 0
        - variable: fsGroup
          label: "fsGroup"
          description: "The group that should own ALL storage."
          schema:
            type: int
            default: 568
# Include{podSecurityContextAdvanced}


# Include{resources}

# Include{advanced}

# Include{addons}
