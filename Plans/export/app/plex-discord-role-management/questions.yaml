# Include{groups}
portals:
  open:
    protocols:
      - "$kubernetes-resource_configmap_portal_protocol"
    host:
      - "$kubernetes-resource_configmap_portal_host"
    ports:
      - "$kubernetes-resource_configmap_portal_port"
questions:
  - variable: portal
    group: "Container Image"
    label: "Configure Portal Button"
    schema:
      type: dict
      hidden: true
      attrs:
        - variable: enabled
          label: "Enable"
          description: "enable the portal button"
          schema:
            hidden: true
            editable: false
            type: boolean
            default: true
# Include{global}

  - variable: controller
    group: "Controller"
    label: ""
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: advanced
          label: "Show Advanced Controller Settings"
          schema:
            type: boolean
            default: false
            show_subquestions_if: true
            subquestions:
              - variable: type
                description: "Please specify type of workload to deploy"
                label: "(Advanced) Controller Type"
                schema:
                  type: string
                  default: "deployment"
                  required: true
                  enum:
                    - value: "deployment"
                      description: "Deployment"
                    - value: "statefulset"
                      description: "Statefulset"
                    - value: "daemonset"
                      description: "Daemonset"
              - variable: replicas
                description: "Number of desired pod replicas"
                label: "Desired Replicas"
                schema:
                  type: int
                  default: 1
                  required: true
              - variable: strategy
                description: "Please specify type of workload to deploy"
                label: "(Advanced) Update Strategy"
                schema:
                  type: string
                  default: "Recreate"
                  required: true
                  enum:
                    - value: "Recreate"
                      description: "Recreate: Kill existing pods before creating new ones"
                    - value: "RollingUpdate"
                      description: "RollingUpdate: Create new pods and then kill old ones"
                    - value: "OnDelete"
                      description: "(Legacy) OnDelete: ignore .spec.template changes"
# Include{controllerExpert}

  - variable: env
    group: "Container Configuration"
    label: "Image Environment"
    schema:
      additional_attrs: true
      type: dict
      attrs:

        - variable: botToken
          label: 'botToken'
          description: "Discord Bot Token"
          schema:
            type: string
            default: ""
        - variable: defaultPrefix
          label: 'defaultPrefix'
          description: "Default Discord Bot Prefix"
          schema:
            type: string
            default: ""
        - variable: node_hook_ip
          label: 'node_hook_ip'
          description: "Host Machine IP - The IP Address of this machine, needed to send to Tautulli for webhook creation"
          schema:
            type: string
            default: ""
        - variable: node_hook_port
          label: 'node_hook_port'
          description: "Enter the same value as you enter for the port below."
          schema:
            type: string
            default: ""
        - variable: tautulli_ip
          label: 'tautulli_ip'
          description: "Tautulli IP Address (Probably your Host IP)"
          schema:
            type: string
            default: ""
        - variable: tautulli_port
          label: 'tautulli_port'
          description: "Tautulli Port Number"
          schema:
            type: string
            default: ""
        - variable: tautulli_api_key
          label: 'tautulli_api_key'
          description: "Tautulli API Key"
          schema:
            type: string
            default: ""
        - variable: sonarr_ip
          label: 'sonarr_ip'
          description: "Sonarr IP Address (Probably your Host IP)"
          schema:
            type: string
            default: ""
        - variable: sonarr_port
          label: 'sonarr_port'
          description: "Sonarr Port Number"
          schema:
            type: string
            default: ""
        - variable: sonarr_api_key
          label: 'sonarr_api_key'
          description: "Sonarr API Key"
          schema:
            type: string
            default: ""
        - variable: sonarr_ip_2
          label: 'sonarr_ip_2'
          description: "Optional Second Sonarr - IP Address (Probably your Host IP)"
          schema:
            type: string
            default: ""
        - variable: sonarr_port_2
          label: 'sonarr_port_2'
          description: "Optional Second Sonarr - Port Number"
          schema:
            type: string
            default: ""
        - variable: sonarr_api_key_2
          label: 'sonarr_api_key_2'
          description: "Optional Second Sonarr - API Key"
          schema:
            type: string
            default: ""
        - variable: sonarr_ip_3
          label: 'sonarr_ip_3'
          description: "Optional Third Sonarr - IP Address (Probably your Host IP)"
          schema:
            type: string
            default: ""
        - variable: sonarr_port_3
          label: 'sonarr_port_3'
          description: "Optional Third Sonarr - Port Number"
          schema:
            type: string
            default: ""
        - variable: sonarr_api_key_3
          label: 'sonarr_api_key_3'
          description: "Optional Third Sonarr - API Key"
          schema:
            type: string
            default: ""
        - variable: DEBUG_MODE
          label: 'DEBUG_MODE'
          description: "Container Variable DEBUGMODE"
          schema:
            type: string
            default: ""

# Include{containerConfig}

  - variable: service
    group: "Networking and Services"
    label: "Configure Service(s)"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: main
          label: "Main Service"
          description: "The Primary service on which the healthcheck runs, often the webUI"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelector}
                    - variable: main
                      label: "Main Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 3000
                              required: true
                          - variable: advanced
                            label: "Show Advanced settings"
                            schema:
                              type: boolean
                              default: false
                              show_subquestions_if: true
                              subquestions:
                                - variable: protocol
                                  label: "Port Type"
                                  schema:
                                    type: string
                                    default: TCP
                                    enum:
                                      - value: HTTP
                                        description: "HTTP"
                                      - value: "HTTPS"
                                        description: "HTTPS"
                                      - value: TCP
                                        description: "TCP"
                                      - value: "UDP"
                                        description: "UDP"
                                - variable: nodePort
                                  label: "Node Port (Optional)"
                                  description: "This port gets exposed to the node. Only considered when service type is NodePort, Simple or LoadBalancer"
                                  schema:
                                    type: int
                                    min: 9000
                                    max: 65535
                                - variable: targetPort
                                  label: "Target Port"
                                  description: "The internal(!) port on the container the Application runs on"
                                  schema:
                                    type: int
                                    default: 3000



  - variable: serviceexpert
    group: "Networking and Services"
    label: "Show Expert Config"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: hostNetwork
          group: "Networking and Services"
          label: "Host-Networking (Complicated)"
          schema:
            type: boolean
            default: false

# Include{serviceExpert}

# Include{serviceList}

  - variable: persistence
    label: "Integrated Persistent Storage"
    description: "Integrated Persistent Storage"
    group: "Storage and Persistence"
    schema:
      additional_attrs: true
      type: dict
      attrs:

        - variable: config
          label: "config Storage"
          description: "Container Path appconfig"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceAdvanced}


# Include{persistenceList}


  - variable: ingress
    label: ""
    group: "Ingress"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: main
          label: "Main Ingress"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}

# Include{ingressTLS}

# Include{ingressTraefik}

# Include{ingressExpert}

# Include{ingressList}

# Include{security}

  - variable: advancedSecurity
    label: "Show Advanced Security Settings"
    group: "Security and Permissions"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: securityContext
          label: "Security Context"
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: privileged
                label: "Privileged mode"
                schema:
                  type: boolean
                  default: false
              - variable: readOnlyRootFilesystem
                label: "ReadOnly Root Filesystem"
                schema:
                  type: boolean
                  default: false
              - variable: allowPrivilegeEscalation
                label: "Allow Privilege Escalation"
                schema:
                  type: boolean
                  default: false
              - variable: runAsNonRoot
                label: "runAsNonRoot"
                schema:
                  type: boolean
                  default: false
# Include{securityContextAdvanced}

  - variable: podSecurityContext
    group: "Security and Permissions"
    label: "Pod Security Context"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: runAsUser
          label: "runAsUser"
          description: "The UserID of the user running the application"
          schema:
            type: int
            default: 0
        - variable: runAsGroup
          label: "runAsGroup"
          description: The groupID this App of the user running the application"
          schema:
            type: int
            default: 0
        - variable: fsGroup
          label: "fsGroup"
          description: "The group that should own ALL storage."
          schema:
            type: int
            default: 568
# Include{podSecurityContextAdvanced}


# Include{resources}

# Include{advanced}

# Include{addons}
